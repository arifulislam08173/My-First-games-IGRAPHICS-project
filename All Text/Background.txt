#include "iGraphics.h"
#include "bitmap_loader.h"
#include<stdio.h>
#include<iostream>

//Structure section :
struct buttonCordinate{
	int x;
	int y;
}bCordinate[3];


//Variable section :
//Menu
int mposx, mposy;
char button[10][35] = { "man\\MyPlay.bmp","man\\Highscore.bmp","man\\Ins.bmp"};
char homemenu[20] = "Home.bmp";
char play[15] = "One.bmp";
char score[25] = "high.bmp";
char ins[25] = "instrsn.bmp";
int gameState =-1;

//Hero
char Hero[9][15]={"Hero\\Hero1.bmp","Hero\\Hero2.bmp","Hero\\Hero3.bmp","Hero\\Hero4.bmp","Hero\\Hero5.bmp","Hero\\Hero6.bmp","Hero\\Hero7.bmp","Hero\\Hero8.bmp","Hero\\Hero9.bmp"};

int HeroCordinateX=10;
int HeroCordinateY=20;
int HeroIndex=0;

//Monster
char Monster[8][25]={"Monster1\\Monster1.bmp","Monster1\\Monster2.bmp","Monster1\\Monster3.bmp","Monster1\\Monster4.bmp"};
int MonsterCordinateX=10;
int MonsterCordinateY=20;
int MonsterIndex=0;

//Background
#define backSpeed 10
#define screenWidth 1000 
char back[6][20]={"man\\Back1.bmp","man\\Back2.bmp","man\\Back3.bmp","man\\Back4.bmp","man\\Back5.bmp","man\\Back6.bmp"};

struct background
{
	int x;
	int y;
};
background backside[6];





int pause1,pause2,pause3;					 //for resume and pause purpose

double bakso_x=20;							//hero x co ordinate
double bakso_y=400;							//hero y co ordinate

double monster_x = 950;						//monster x co ordinate
double monster_y = 450;						//monster y co ordinate

int dx=10;									// for ghas;
int dy=100;									//for hero guli		
int dyy=6;									//for hero boro hero guli
int ox =3;									//for monster
int oy =2;									//for monster
int mdy =200;								// for monster guli
int mdyy = 6;								// for monster boro guli


double monsterCopy_x=monster_x;				//to store the value between guli and monster
double monsterCopy_y=monster_y;				//to store the value between guli and monster	


double baksoCopy_x=bakso_x;					//to store the value between guli and hero
double baksoCopy_y=bakso_y;					//to store the valuebetween guli and hero



double guli_x1=baksoCopy_x;					//Bullet of hero
double guli_y1=baksoCopy_y;

double guli_x2=baksoCopy_x;
double guli_y2=baksoCopy_y;

double guli_x3=baksoCopy_x;
double guli_y3=baksoCopy_y;

double guli_x4=baksoCopy_x;
double guli_y4=baksoCopy_y;

double guli_x5=baksoCopy_x;
double guli_y5=baksoCopy_y;

double guli_x6=baksoCopy_x;
double guli_y6=baksoCopy_y;



double Mguli_x1=monsterCopy_x;			//Bullet of Monster
double Mguli_y1=monsterCopy_y;

double Mguli_x2=monsterCopy_x;
double Mguli_y2=monsterCopy_y;

double Mguli_x3=monsterCopy_x;
double Mguli_y3=monsterCopy_y;

double Mguli_x4=monsterCopy_x;
double Mguli_y4=monsterCopy_y;

double Mguli_x5=monsterCopy_x;
double Mguli_y5=monsterCopy_y;

double Mguli_x6=monsterCopy_x;
double Mguli_y6=monsterCopy_y;


double ghas1_x=0;						// base
double ghas2_x=0;
double ghas3_x=0;


bool musicOn=true;

bool hello = true ;
bool hii = false;
bool bye = false;
bool tata = false ;



void backsideImage()

{
	 for(int i=0;i<6;i++)
	 {
		 iShowBMP(backside[i].x,backside[i].y,back[i]);
	 }
}


void iDraw()
{
	 iClear();
	

	
	
	backsideImage();


	
}

void iPassiveMouse(int x, int y)
{
	
}



void iMouseMove(int mx, int my)
{
	
}


void iMouse(int button, int state, int mx, int my)
{
	
}



void iKeyboard(unsigned char key)
{
	
	if(key == 'x')
	{
		
		gameState =-1;
	}

	if(key == 'y')
	{
		
		exit(0);
	}
	if(bakso_y<800 && key=='w')
	{
		bakso_y+=100;
		
		
	}
	if(bakso_x>20 &&  key=='a')
	{
		bakso_x-=20;
		
	}
	if(bakso_y>400 &&  key=='s')
	{
		bakso_y-=100;
		
	}
	if(key=='d' && bakso_x<=500)
	{
		bakso_x+=30;
		
	
	}
	

	if(key =='p')
	{

		iPauseTimer(pause1);
		iPauseTimer(pause2);
		iPauseTimer(pause3);

	}
	if(key=='r')
	{

		iResumeTimer(pause1);
		iResumeTimer(pause2);
		iResumeTimer(pause3);
	}
	
	
	
	
}

/*
 function iSpecialKeyboard() is called whenver user hits special keys like-
 function keys, home, end, pg up, pg down, arraows etc. you have to use
 appropriate constants to detect them. A list is:
 GLUT_KEY_F1, GLUT_KEY_F2, GLUT_KEY_F3, GLUT_KEY_F4, GLUT_KEY_F5, GLUT_KEY_F6,
 GLUT_KEY_F7, GLUT_KEY_F8, GLUT_KEY_F9, GLUT_KEY_F10, GLUT_KEY_F11, GLUT_KEY_F12,
 GLUT_KEY_LEFT, GLUT_KEY_UP, GLUT_KEY_RIGHT, GLUT_KEY_DOWN, GLUT_KEY_PAGE UP,
 GLUT_KEY_PAGE DOWN, GLUT_KEY_HOME, GLUT_KEY_END, GLUT_KEY_INSERT
 */
void iSpecialKeyboard(unsigned char key)
{

}


		void setAll()
		{
			int sum=0;
			for(int i=0;i<6;i++)
			{
				backside[i].y=0;
				backside[i].x=sum;
				sum+=120;
			}

		}

		void backgroundchange()
		{
			for(int i=0; i<6; i++)
			{
			backside[i].x -=backSpeed; 
			if(backside[i].x<=0)
			{
				backside[i].x=screenWidth;
			}
			}
		}

int main()
{
	setAll();
	iSetTimer(25,backgroundchange);
	int sum =500;
	for(int i = 2; i >= 0; i--)
	{
		bCordinate[i].x = 100;
		bCordinate[i].y = sum;
		sum += 150;
	}



	dx = 5;
	

	if(musicOn);
	PlaySound("music\\Play1.wav",NULL,SND_LOOP | SND_ASYNC);


	iInitialize(1000, 950, "Demo");

	iStart();

	return 0;
}
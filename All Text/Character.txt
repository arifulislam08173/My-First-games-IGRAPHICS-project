#include "iGraphics.h"
#include<iostream>
#include<string>

#define JUMPLIMIT 300
#define enemyNum 4
using namespace std;

int scnWidth = 1200, scnHeight = 600;

char bc[10][200] = { "image\\three.bmp", "image\\six.bmp", "image\\nine.bmp", "image\\four.bmp" };
char man[10][200] = { "man\\walkec.bmp", "man\\run.bmp", "man\\sneak.bmp", "man\\walkec.bmp", "man\\run.bmp", "man\\sneak.bmp","man\\death.bmp"};
char corona[7][200] = { "man\\corona1.bmp", "man\\corona2.bmp", "man\\corona3.bmp" };
char manJump[3][20] = { "man\\jump.bmp", "man\\jump2E.bmp" };
char enemyName[8][20] = { "man\\corona1.bmp", "man\\corona2.bmp", "man\\corona3.bmp" };

int bcImage = 0;

int charCoordinateX = 0, charCoordinateY=0;
int charIndex = 0;
bool standPos = true;
int runCnt = 0;
int bcTimeCnt = 0;
bool jump = false, jumpUp = false;
int jumpCo = 0;
bool slidepic = true;
//:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::Idraw Here::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::://

struct enemy{
	int x = 0, y = 0, enemyIndex = 0;
	//bool enemyShow;
};
enemy arr[3];

void enemyMove(){
	for (int i = 0; i < enemyNum; i++){
		if (arr[i].enemyIndex){
			iShowBMP2(arr[i].x, arr[i].y, enemyName[arr[i].enemyIndex], 0);
			
		}
	}
}

void iDraw()
{
	iClear();
	
	
	// change background
	/*bcTimeCnt++;
	if (bcTimeCnt >= 0 && bcTimeCnt <= 1000) iShowBMP(0, 0, bc[0]);
	
	else if (bcTimeCnt >= 1001 && bcTimeCnt <= 2000) iShowBMP(0, 0, bc[1]);
	else if (bcTimeCnt >= 2001 && bcTimeCnt <= 3000){
		iShowBMP(0, 0, bc[2]);
		
	}
	else if (bcTimeCnt >= 3001 && bcTimeCnt <= 4000){
		bcTimeCnt = 0;
		iShowBMP(0, 0, bc[3]);
		
	}
	*/

	//enemy moving

	enemyMove();
	
	
	//jump
	if (jump){
		if (jumpUp){
			iShowBMP2(charCoordinateX, charCoordinateY + jumpCo, manJump[0],0);
		}
		else{
			iShowBMP2(charCoordinateX, charCoordinateY+ jumpCo, manJump[0], 0);
		}
	}
	else{
		//stand pic
		if(standPos) iShowBMP2(charCoordinateX, charCoordinateY, man[3], 0);

		//run
		else{
			
			iShowBMP2(charCoordinateX, charCoordinateY, man[charIndex], 0);
			runCnt++;
			if (runCnt >= 20){
				runCnt = 0;
				standPos = true;
				iShowBMP2(charCoordinateX, charCoordinateY, man[3], 0);// stand pic
			}

			
		}
	}
	
}

/*function iMouseMove() is called when the user presses and drags the mouse.
(mx, my) is the position where the mouse pointer is.
*/

void iMouseMove(int mx, int my)
{
	
}
//*******************************************************************ipassiveMouse***********************************************************************//
void iPassiveMouseMove(int mx, int my)
{
	
}

void iMouse(int button, int state, int mx, int my)
{
	
	if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)
	{
		
		
	}
	
	
	if (button == GLUT_RIGHT_BUTTON && state == GLUT_DOWN)
	{
		
	}
}

/*
function iKeyboard() is called whenever the user hits a key in keyboard.
key- holds the ASCII value of the key pressed.
*/


void iKeyboard(unsigned char key)
{
	if (key == 'x')
	{
		iShowBMP2(charCoordinateX, charCoordinateY, man[6],0);
		
	}
	
	
}

/*
function iSpecialKeyboard() is called whenver user hits special keys like-
function keys, home, end, pg up, pg down, arraows etc. you have to use
appropriate constants to detect them. A list is:
GLUT_KEY_F1, GLUT_KEY_F2, GLUT_KEY_F3, GLUT_KEY_F4, GLUT_KEY_F5, GLUT_KEY_F6,
GLUT_KEY_F7, GLUT_KEY_F8, GLUT_KEY_F9, GLUT_KEY_F10, GLUT_KEY_F11, GLUT_KEY_F12,
GLUT_KEY_LEFT, GLUT_KEY_UP, GLUT_KEY_RIGHT, GLUT_KEY_DOWN, GLUT_KEY_PAGE UP,
GLUT_KEY_PAGE DOWN, GLUT_KEY_HOME, GLUT_KEY_END, GLUT_KEY_INSERT
*/
void iSpecialKeyboard(unsigned char key)
{

	//move right
	if (key == GLUT_KEY_RIGHT)
	{
		if (charCoordinateX <= 1050) charCoordinateX += 10;
		charIndex++;
		if (charIndex > 5) charIndex = 0;
		standPos = false;
		
		
	}
	
	//move left
	if (key == GLUT_KEY_LEFT)
	{
		
		if (charCoordinateX > 0) charCoordinateX -= 10;
		charIndex++;
		if (charIndex > 5) charIndex = 0;
		standPos = false;
		
	}
	
	//jump up
	if (key == GLUT_KEY_UP)
	{
		if (!jump){
			jump = true;
			jumpUp = true;
		}
		
	}

	if (key == GLUT_KEY_DOWN)
	{
		
	}

	if (key == GLUT_KEY_HOME)
	{
		
	}
	
}

void stateChange(){
	//jump
	if (jump){
		if (jumpUp){
			jumpCo += 10;
			if (jumpCo > JUMPLIMIT){
				jumpUp = false;
			}
		}
		else{
			jumpCo -= 10;
			if (jumpCo <= 0){
				jump = false;
				jumpCo = 0;
			}
		}
	}

	//corona's state
	for (int i = 0; i < enemyNum; i++){
		arr[i].x -=5 ;
		if (arr[i].x < 0){
			arr[i].x = scnWidth + rand() % 500;
		}
		arr[i].enemyIndex++;
		if (arr[i].enemyIndex > 2){
			arr[i].enemyIndex = 0;
		}
	}

}

void enemyComingState(){

	for (int i = 0; i < enemyNum; i++){
		arr[i].x =  scnWidth + rand() % 500;
		arr[i].y =  rand() % 150;
		arr[i].enemyIndex = rand() % 3 ;
		//arr[i].enemyShow = true;
		
	}
}

int main()
{
	enemyComingState();
	iSetTimer(20, stateChange);
	
	///srand((unsigned)time(NULL));
	iInitialize(scnWidth, scnHeight, "The Corona-Man");
	///updated see the documentations
	//enemyMove();
	iStart();
	return 0;
}
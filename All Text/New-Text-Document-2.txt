#include "iGraphics.h"
#include "bitmap_loader.h"
#include<stdio.h>

//Structure section :
struct buttonCordinate{
	int x;
	int y;
}bCordinate[6];


//Variable section :
int mposx, mposy;
char button[10][35] = { "man\\A.bmp","man\\B.bmp","man\\C.bmp","man\\D.bmp","man\\E.bmp","man\\F.bmp"};
char homemenu[20] = "man\\home.bmp";
char play[15] = "man\\back.bmp";
char score[25] = "man\\high.bmp";
char ins[25] = "man\\instrsn.bmp";
char lvl[25] = "man\\One.bmp";
char credit[25] = "man\\Two.bmp";
char quit[25] = "man\\Three.bmp";

int gameState =-1;


int pause1,pause2,pause3;					 //for resume and pause purpose

double bakso_x=20;							//hero x co ordinate
double bakso_y=400;							//hero y co ordinate

double monster_x = 950;						//monster x co ordinate
double monster_y = 450;						//monster y co ordinate

int dx=10;									// for ghas;
int dy=10;									//for hero guli		
int dyy=6;									//for hero boro hero guli
int ox =3;									//for monster
int oy =2;									//for monster
int mdy =10;								// for monster guli
int mdyy = 6;								// for monster boro guli


double monsterCopy_x=monster_x;				//to store the value between guli and monster
double monsterCopy_y=monster_y;				//to store the value between guli and monster	


double baksoCopy_x=bakso_x;					//to store the value between guli and hero
double baksoCopy_y=bakso_y;					//to store the valuebetween guli and hero



double guli_x1=baksoCopy_x;					//Bullet of hero
double guli_y1=baksoCopy_y;

double guli_x2=baksoCopy_x;
double guli_y2=baksoCopy_y;

double guli_x3=baksoCopy_x;
double guli_y3=baksoCopy_y;

double guli_x4=baksoCopy_x;
double guli_y4=baksoCopy_y;

double guli_x5=baksoCopy_x;
double guli_y5=baksoCopy_y;

double guli_x6=baksoCopy_x;
double guli_y6=baksoCopy_y;



double Mguli_x1=monsterCopy_x;			//Bullet of Monster
double Mguli_y1=monsterCopy_y;

double Mguli_x2=monsterCopy_x;
double Mguli_y2=monsterCopy_y;

double Mguli_x3=monsterCopy_x;
double Mguli_y3=monsterCopy_y;

double Mguli_x4=monsterCopy_x;
double Mguli_y4=monsterCopy_y;

double Mguli_x5=monsterCopy_x;
double Mguli_y5=monsterCopy_y;

double Mguli_x6=monsterCopy_x;
double Mguli_y6=monsterCopy_y;


double ghas1_x=0;						// base
double ghas2_x=0;
double ghas3_x=0;


bool musicOn=true;

bool hello = true ;
bool hii = false;
bool bye = false;
bool tata = false ;


void gamePlayView(){
	iShowBMP(0,0,"back.bmp");
	//iShowBMP2(0,0,"Madi.bmp",255);

	/*iShowBMP2(1000+100-ghas1_x,225,"ghas3.bmp",255);
	iShowBMP2(1000+160-ghas1_x,225,"ghas3.bmp",255);
	iShowBMP2(1000+300-ghas1_x,225,"ghas3.bmp",255);
	iShowBMP2(1000+360-ghas1_x,225,"ghas3.bmp",255);
	iShowBMP2(1000+500-ghas2_x,225,"ghas3.bmp",255);
	iShowBMP2(1000+560-ghas2_x,225,"ghas3.bmp",255);
	iShowBMP2(1000+700-ghas2_x,225,"ghas3.bmp",255);
	iShowBMP2(1000+760-ghas2_x,225,"ghas3.bmp",255);
	iShowBMP2(1000+900-ghas3_x,225,"ghas3.bmp",255);
	iShowBMP2(1000+960-ghas3_x,225,"ghas3.bmp",255);
	iShowBMP2(1000+1100-ghas3_x,225,"ghas3.bmp",255);
	iShowBMP2(1000+1160-ghas3_x,225,"ghas3.bmp",255);*/
}

void Gameplay()
{
	 
		  iShowBMP2(bakso_x,bakso_y,"nayak.bmp",255);
		  iShowBMP2(monster_x, monster_y,"monster.bmp",255);
	 
}




// Bullets Drawing method for hero (5 regular bullets of point and one big bullets of circle)
void Guli_1()
{
	 iSetColor(0,0,0);
	iPoint(guli_x1+10,guli_y1+50,5);
}
void Guli_2()
{
	iPoint(guli_x2+35,guli_y2+50,5);
}
void Guli_3()
{
	
	iPoint(guli_x3+35,guli_y3+50,5);
}
void Guli_4()
{
	
	iPoint(guli_x4+35,guli_y4+50,5);
}
void Guli_5()
{
	iPoint(guli_x5+35,guli_y5+50,5);
}
void Guli_6()
{
	iFilledCircle(guli_x6+30,guli_y6+50,22,1000);
}


// Bullets Drawing method for monster(5 regular bullets of point and one big bullets of circle)
void Mguli_1()
{
	 iSetColor(0,0,255);
	iPoint(Mguli_x1+10,Mguli_y1+50,5);
}
void Mguli_2()
{
	iPoint(Mguli_x2+35,Mguli_y2+50,5);
}
void Mguli_3()
{
	
	iPoint(Mguli_x3+35,Mguli_y3+50,5);
}
void Mguli_4()
{
	
	iPoint(Mguli_x4+35,Mguli_y4+50,5);
}
void Mguli_5()
{
	iPoint(Mguli_x5+35,Mguli_y5+50,5);
}
void Mguli_6()
{
	iFilledCircle(Mguli_x6+30,Mguli_y6+50,22,1000);
}




void iDraw()
{
	 iClear();

	 if(gameState ==-1)
	{
		//Homemenu
		iShowBMP(0, 0, "man//home.bmp");

		for (int i = 0; i < 6; i++)
		{
			iShowBMP2(bCordinate[i].x, bCordinate[i].y, button[i], 255);
		}
	
	}

	 else if(gameState == 0)
	{
		iShowBMP(0, 0,play);
	
	gamePlayView();
	Gameplay();
	 Guli_1();
	 Guli_2();
	 Guli_3();
	 Guli_4();
	 Guli_5();
     Guli_6();
     Mguli_1();
	 Mguli_2();
     Mguli_3();
	 Mguli_4();
	 Mguli_5();
     Mguli_6();
	

	}

	 else if(gameState == 1)
	{
		iShowBMP(0, 0, score);
	}
	
	 else if(gameState == 2)
	{
		iShowBMP(0, 0, ins);
	} 
	 else if(gameState == 3)
	{
		iShowBMP(0, 0, lvl);
	} 
	 else if(gameState == 4)
	{
		iShowBMP(0, 0, credit);
	} 
	 else if(gameState == 5)
	{
		iShowBMP(0, 0, quit);
	} 
}

void iPassiveMouse(int x, int y)
{
	
}



void iMouseMove(int mx, int my)
{
	
}


void iMouse(int button, int state, int mx, int my)
{
	if (button == GLUT_LEFT_BUTTON && state == GLUT_DOWN)

	{
		for(int i = 0; i < 6; i++)
		{
			if(mx >= bCordinate[i].x && mx <= bCordinate[i].x + 260 && my >= bCordinate[i].y && my <= bCordinate[i].y + 100)
			{
				gameState = i;
			}
		}
	}
}



void iKeyboard(unsigned char key)
{
	
	if(key == 'x')
	{
		
		gameState =-1;
	}

	if(key == 'y')
	{
		
		exit(0);
	}
	if(bakso_y<800 && key=='w')
	{
		bakso_y+=100;
		
		
	}
	if(bakso_x>20 &&  key=='a')
	{
		bakso_x-=20;
		
	}
	if(bakso_y>400 &&  key=='s')
	{
		bakso_y-=100;
		
	}
	if(key=='d' && bakso_x<=500)
	{
		bakso_x+=30;
		
	
	}
	

	if(key =='p')
	{

		iPauseTimer(pause1);
		iPauseTimer(pause2);
		iPauseTimer(pause3);

	}
	if(key=='r')
	{

		iResumeTimer(pause1);
		iResumeTimer(pause2);
		iResumeTimer(pause3);
	}
	
	
	
	
}

/*
 function iSpecialKeyboard() is called whenver user hits special keys like-
 function keys, home, end, pg up, pg down, arraows etc. you have to use
 appropriate constants to detect them. A list is:
 GLUT_KEY_F1, GLUT_KEY_F2, GLUT_KEY_F3, GLUT_KEY_F4, GLUT_KEY_F5, GLUT_KEY_F6,
 GLUT_KEY_F7, GLUT_KEY_F8, GLUT_KEY_F9, GLUT_KEY_F10, GLUT_KEY_F11, GLUT_KEY_F12,
 GLUT_KEY_LEFT, GLUT_KEY_UP, GLUT_KEY_RIGHT, GLUT_KEY_DOWN, GLUT_KEY_PAGE UP,
 GLUT_KEY_PAGE DOWN, GLUT_KEY_HOME, GLUT_KEY_END, GLUT_KEY_INSERT
 */
void iSpecialKeyboard(unsigned char key)
{

}

void GhasChange_1()
{
	ghas1_x= ghas1_x+dx;

	if(ghas1_x==1340)
	{
		ghas1_x=0;

	}
}
	void GhasChange_2()
{
	ghas2_x= ghas2_x+dx;

	if(ghas2_x==1740)
	{
		ghas2_x=0;

	}
}
	void GhasChange_3()
{
	ghas3_x= ghas3_x+dx;

	if(ghas3_x==2140)
	{
		ghas3_x=0;

	}


}

	void GuliChange()
		{
			
		guli_x1=guli_x1+dy;
		guli_x2=guli_x2+dy;
		guli_x3=guli_x3+dy;
		guli_x4=guli_x4+dy;
		guli_x5=guli_x5+dy;


		if(guli_x1>1520)
		{
		guli_x1=bakso_x;
		guli_y1=bakso_y;
		}

		if(guli_x2>1860)
				{
					guli_x2=bakso_x;
					guli_y2=bakso_y;
				}

				if(guli_x3>1710)
						{
							guli_x3=bakso_x;
							guli_y3=bakso_y;
						}
					if(guli_x4>1160)
							{
								guli_x4=bakso_x;
								guli_y4=bakso_y;
							}
					
										if(guli_x5>1010)
										{
										guli_x5=bakso_x;
										guli_y5=bakso_y;
										}
	}
	void BoroGuliChange()
{
	guli_x6=guli_x6+dyy;
if(guli_x6>2760)
	{
	guli_x6=bakso_x;
	guli_y6=bakso_y;
				}

}

	void MonsterChange()
{
	monster_x += ox;
	monster_y += oy;

	if(monster_x > 950 || monster_x <750)
	{
	ox = -ox;
	}
	if(monster_y > 850 || monster_y < 450)
	{
	oy = -oy;
	}
}

	void MonsterGuliChange()
		{
			
		Mguli_x1=Mguli_x1-mdy;
		Mguli_x2=Mguli_x2-mdy;
		Mguli_x3=Mguli_x3-mdy;
		Mguli_x4=Mguli_x4-mdy;
		Mguli_x5=Mguli_x5-mdy;


		if(Mguli_x1<-1100)
		{
		Mguli_x1=monster_x;
		Mguli_y1=monster_y;
		}

		if(Mguli_x2<-1260)
				{
					Mguli_x2=monster_x;
					Mguli_y2=monster_y;
				}

				if(Mguli_x3<-1710)
						{
							Mguli_x3=monster_x;
							Mguli_y3=monster_y;
						}
					if(Mguli_x4<-1460)
							{
								Mguli_x4=monster_x;
								Mguli_y4=monster_y;
							}
					
										if(Mguli_x5<-1510)
										{
										Mguli_x5=monster_x;
										Mguli_y5=monster_y;
										}
	}
	void MonsterBoroGuliChange()
{
	Mguli_x6=Mguli_x6-mdyy;
if(Mguli_x6<-2760)
	{
	Mguli_x6=monster_x;
	Mguli_y6=monster_y;
				}

}

	


int main()
{
	int sum =50;
	for(int i = 5; i >= 0; i--)
	{
		bCordinate[i].x = 50;
		bCordinate[i].y = sum;
		sum +=80;
	}
	pause1=iSetTimer(20,GhasChange_1);
	pause2=iSetTimer(20,GhasChange_2);

	pause3=iSetTimer(20,GhasChange_3);
	
	iSetTimer(10,GuliChange);
	iSetTimer(15,BoroGuliChange);
	iSetTimer(1,MonsterGuliChange);
	iSetTimer(20,MonsterBoroGuliChange);

	iSetTimer(60, MonsterChange);


	dx = 5;
	

	if(musicOn);
	//PlaySound("music\\Play1.wav",NULL,SND_LOOP | SND_ASYNC);


	iInitialize(1000, 750, "Demo");

	iStart();

	return 0;
}
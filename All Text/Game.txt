#include "iGraphics.h"
#include "bitmap_loader.h"
#include<stdio.h>
//#define UpperBackgroundSpeed 18
//#define LowerBackgroundSpeed 12
//#define BackgroundSpeed 12
 
int pause1,pause2,pause3;   //for resume and pause purpose
double bakso_x=20;			//hero x co ordinate
double bakso_y=450;			//hero y co ordinate
int dx=10;					// for hero
int dy=10;					//for guli
int dyy=6;					//boro guli
double baksoCopy_x=bakso_x;		//to store the value
double baksoCopy_y=bakso_y;		//to store the value
//Bullet
double guli_x1=baksoCopy_x;
double guli_y1=baksoCopy_y;
double guli_x2=baksoCopy_x;
double guli_y2=baksoCopy_y;
double guli_x3=baksoCopy_x;
double guli_y3=baksoCopy_y;
double guli_x4=baksoCopy_x;
double guli_y4=baksoCopy_y;
double guli_x5=baksoCopy_x;
double guli_y5=baksoCopy_y;
double guli_x6=baksoCopy_x;
double guli_y6=baksoCopy_y;
// base
double ghas1_x=0;
double ghas2_x=0;
double ghas3_x=0;
int pic_x, pic_y;
bool musicOn=true;

//char UpperBackgroundImage[10][15]={"images\\1.bmp","images\\2.bmp","images\\3.bmp","images\\4.bmp","images\\5.bmp","images\\6.bmp","images\\7.bmp","images\\8.bmp","images\\9.bmp","images\\10.bmp"};
//char LowerBackgroundImage[10][15]={"images\\1.bmp","images\\2.bmp","images\\3.bmp","images\\4.bmp","images\\5.bmp","images\\6.bmp","images\\7.bmp","images\\8.bmp","images\\9.bmp","images\\10.bmp"};

/*struct background
{
	int x;
	int y;

};
background UpperBackground[13];
background LowerBackground[13];*/


// hero background (1 rectangle)
void Bangladesh(){
	iSetColor(212,164,164);
	iFilledRectangle(0,0,700, 900);
}
// villain background (1 rectangle)
void India(){
	iSetColor(192,22,22);
	iFilledRectangle(700, 0,500,900);
}
// base drawing method  (3 rectangle)
void Vumi()
{	
	
iClear();

	iShowBMP(pic_x, pic_y,"BackGround.bmp");

	 iSetColor(53,9,9);
	 iFilledRectangle(0,0,1000,75);
	 iSetColor(100,32,32);
	  iFilledRectangle(0,75,1000,75);
	  iSetColor(47,28,28);
	   iFilledRectangle(0,150,1000,75);
}
void Ghas1(){
	iSetColor(0,255,0);

	iLine(1000+100-ghas1_x,225,1000+120-ghas1_x,325);
	iLine(1000+120-ghas1_x,325,1000+140-ghas1_x,225);
	iLine(1000+300-ghas1_x,225,1000+320-ghas1_x,325);
	iLine(1000+320-ghas1_x,325,1000+340-ghas1_x,225);


	
}
void Ghas2()
{
	iSetColor(0,255,0);

	iLine(1000+500-ghas2_x,225,1000+520-ghas2_x,325);
	iLine(1000+520-ghas2_x,325,1000+540-ghas2_x,225);
	iLine(1000+700-ghas2_x,225,1000+720-ghas2_x,325);
	iLine(1000+720-ghas2_x,325,1000+740-ghas2_x,225);
}
void Ghas3()
{
	iSetColor(0,255,0);
	iLine(1000+900-ghas3_x,225,1000+920-ghas3_x,325);
	iLine(1000+920-ghas3_x,325,1000+940-ghas3_x,225);

	iLine(1000+1100-ghas3_x,225,1000+1120-ghas3_x,325);
	iLine(1000+1120-ghas3_x,325,1000+1140-ghas3_x,225);
}
// hero drawing method (1 rectangle)
void Hero()
{
 iSetColor(0,0,0);
	 iFilledRectangle(bakso_x,bakso_y,100,100);
}
// Bullets Drawing method (5 regular bullets of point and one big bullets of circle)
void Guli_1()
{
	iPoint(guli_x1+10,guli_y1+50,10);
}
void Guli_2()
{
	iPoint(guli_x2+35,guli_y2+50,10);
}
void Guli_3()
{
	iPoint(guli_x3+60,guli_y3+50,10);
}
void Guli_4()
{
	iPoint(guli_x4+85,guli_y4+50,10);
}
void Guli_5()
{
	iPoint(guli_x5+110,guli_y5+50,10);
}
void Guli_6()
{
	iFilledCircle(guli_x6+30,guli_y6+50,20,1000);
}
void iDraw()
{
	/*for(int i=0;i<10;i++)
	{
		iShowBMP(UpperBackground[i].x,UpperBackground[i].y,UpperBackgroundImage[i]);
		iShowBMP(LowerBackground[i].x,LowerBackground[i].y,LowerBackgroundImage[i]);
	}*/

	 Bangladesh();
	   India();
	     Vumi();
	Ghas1();
	  Ghas2();
	   Ghas3();

	 Hero();

	  Guli_1();
	   Guli_2();
	    Guli_3();
		 Guli_4();
		  Guli_5();
		   Guli_6();

	
}
void iPassiveMouse(int x, int y)
{
}


void iMouseMove(int mx, int my)
{
}

void iMouse(int button, int state, int mx, int my)
{
}


void iKeyboard(unsigned char key)
{
	if(key!='f')
	{
	if(bakso_y<700 && key=='w')
	{
		bakso_y+=100;

		
	}
	if(bakso_x>100 &&  key=='a')
	{
		bakso_x-=100;
	}
	if(bakso_y>400 &&  key=='s')
	{
		bakso_y-=100;
	}
	if(key=='d' && bakso_x<=500)
	{
		bakso_x+=100;
	}
	}

	
	if(key =='p')
	{
		iPauseTimer(pause1);
		iPauseTimer(pause2);
		iPauseTimer(pause3);
	}
	if(key=='r')
	{
		iResumeTimer(pause1);
		iResumeTimer(pause2);
		iResumeTimer(pause3);
	}

	

	

	
}
/*
 function iSpecialKeyboard() is called whenver user hits special keys like-
 function keys, home, end, pg up, pg down, arraows etc. you have to use
 appropriate constants to detect them. A list is:
 GLUT_KEY_F1, GLUT_KEY_F2, GLUT_KEY_F3, GLUT_KEY_F4, GLUT_KEY_F5, GLUT_KEY_F6,
 GLUT_KEY_F7, GLUT_KEY_F8, GLUT_KEY_F9, GLUT_KEY_F10, GLUT_KEY_F11, GLUT_KEY_F12,
 GLUT_KEY_LEFT, GLUT_KEY_UP, GLUT_KEY_RIGHT, GLUT_KEY_DOWN, GLUT_KEY_PAGE UP,
 GLUT_KEY_PAGE DOWN, GLUT_KEY_HOME, GLUT_KEY_END, GLUT_KEY_INSERT
 */
void iSpecialKeyboard(unsigned char key)
{
}

void GhasChange_1()
{
	ghas1_x= ghas1_x+dx;
	if(ghas1_x==1340)
	{
		ghas1_x=0;
	}
}
	void GhasChange_2()
{
	ghas2_x= ghas2_x+dx;
	if(ghas2_x==1740)
	{
		ghas2_x=0;
	}
}
	void GhasChange_3()
{
	ghas3_x= ghas3_x+dx;
	if(ghas3_x==2140)
	{
		ghas3_x=0;
	}

}
	void GuliChange()
		{
		guli_x1=guli_x1+dy;
		guli_x2=guli_x2+dy;
		guli_x3=guli_x3+dy;
		guli_x4=guli_x4+dy;
		guli_x5=guli_x5+dy;

		if(guli_x1>1520)
		{
		guli_x1=bakso_x;
		guli_y1=bakso_y;
		}
		if(guli_x2>1860)
				{
					guli_x2=bakso_x;
					guli_y2=bakso_y;
				}
				if(guli_x3>1710)
						{
							guli_x3=bakso_x;
							guli_y3=bakso_y;
						}
					if(guli_x4>1160)
							{
								guli_x4=bakso_x;
								guli_y4=bakso_y;
							}
										if(guli_x5>1010)
										{
										guli_x5=bakso_x;
										guli_y5=bakso_y;
										}
	}
	void BoroGuliChange()
{
	guli_x6=guli_x6+dyy;
if(guli_x6>2260)
	{
	guli_x6=bakso_x;
	guli_y6=bakso_y;
				}
}
	/*void SetAll()
	{
		int sum=0;
		for(int i=0;i<10;i++)
		{
			UpperBackground[i].y=120;
			LowerBackground[i].y=0;
		    UpperBackground[i].x=sum;
			LowerBackground[i].y=sum;
			sum+=120;
		}
	}*/
	

int main()
{
	//SetAll();

	pause1=iSetTimer(20,GhasChange_1);
	pause2=iSetTimer(20,GhasChange_2);
	pause3=iSetTimer(20,GhasChange_3);
	iSetTimer(20,GuliChange);
	iSetTimer(1,BoroGuliChange);

	if(musicOn);
	PlaySound("music\\Play1.wav",NULL,SND_LOOP | SND_ASYNC);

	iInitialize(1000, 900, "Demo");
	iStart(); // it will start drawing
	return 0;
}